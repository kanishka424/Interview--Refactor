$$$$$$$$$$$$$4MICROSERVICES ARCHITECTURE | DEPLOYMENT STRATEGIES| PART - 10
$$$$$$$$$$$$$$$$$$$$$$$

here we will discuss how to deploy
or how third party or Ui would access the service
for that we ned to deploy these MS on some place
can be  aserver ,virtual machine,container,cloud etcc...
run and make that services access by ui or whatever servicess


before deploying we have to have some deployment goals

1)scalibility and throughput
2)Reliable and available
3)Isolation
4)resource limit
5)Monitor
6)cost effective





Isolation
one service should not disturb other services we deploying
we need to have ;pure isolation around the services we deploying



4)resource limit
this service must give the limit of resources(MS A should have one cpu and 2GB of meemory only)


6)cost effective
utilize your resources to maximum extend
make sure our cloud infrasturcter and erver cost low


tie 2.57lets see waht architectur people use to achieve eabove goals


DEPLOYENT PATTERNS

1)Multiple server per host pattern






As name suggest it is running multiple service in one virtual machine or 
Physical server is called as multiple a server per host machine

as image shows here (time 3.16)  in one virtual machine/physical server(large box)
we are running microservices s1 and s2
that basically abot it you can run multiple m in one host it could be 2,10 or 15

usaully MS (S1 and S2) runs as seperate porcess in sam emachine
if both are return in java  s1 and s2 both can be run as same instance of java
if one is runing on java one is on python you can redirect traffic over here(???)
anyway it doent matter how you configure doesnt matter
this is very tradiitional apprach  even now people are doing the ame thong
baically not recommended becaue it has its own downsides though we used these in beginning now we have better aproaches

HOW DO WE SSCALE?
RUN A ANOTHER HOST(VIRTUAL MACHINE,PHYSICAL,ETC) WITH SAME MICRO SERVICES INSIDE AND YOU ALSO NEED TO DO THE LOAD BALANCING


ADVANTAGES AND DIADVATAGES

ADVANTAGES
1)EFFICIENT RESOURCE UTILIZATION
SAY 1 IS NOT GETTING MUCH TRAFFIC SO IT WILL USE LESS RESOURCE FRO PHYSICAL MACHINE
IF ALL MICRO SERVICES ARE BUSY ALL OF THEM WOULD UTILIZE THE HW TO MAX EFFICEINTLY
VERY COST EFFEICTIVE FOR THE BUSINESS


2)FAST DEPLOYMENT 
IF YOU HAVE A ONE SERVER RUNNING YOU BASICALAY ALREADY HAS A PLACE TO DEPLOY OTHER MICRO SERVICES AS WELL THAT WAY IT IS MUCH FASTER TO DEPLOY


DISADVANTAGE

1)POOR ISOLATION 
BOTH MICRO SERVICES ARE LIVING IN SAME OPERATING SYSTEM
WHICH MEANS S1 WILL DITURB S2 AT ANY POINT
E.G-IF S2 TORING SOME TEMP FILES THEN S1 MIGHT DELETE THEM AT ANY POINT
THERE CAN BE LOT OF CASES LIKE THIS IT CAN BE RESOURCE CONSUMPTION AS WELL
2)nO RESOURCE LIMIT
IF S2 IS CONSUMING 99% THEN S1 WONT HAVE ANY CPU LEFT

3)DEPENDENCY CONFLCT
IF S1 AND S2 ARE USING DIFFERENT JAVA VERSIONS THEY MIGHT HAVE CONFLICTS BY ACCESSING THE WROONG JAVA VERSIONS
OR IT CAN BE THE OS LEVEL LIBRAIRE WHICH WOULD CONFLICTS
WE MIGHT HAVE TO HAVE ANOTHER LAYER JUST TO RESLOVE THE DEOENDENCY (TIME 8.05)????




2)SERVER PER VM/CONTAINER 


TIME 8.10

DEPLOY MY MICRO SERVICE IN ONE VIRTUAL MACHINE/CONTAINER

ONLY  ONE MS PER MACHINE(VIRTUAL MACHINE/CONTAINER)
HOW TO SCALE ?
ADD ANOTHER VIRTAUL MACHINE/CONTAINER TO SCALE OUT A MICRO SERVICE
WE BASICALLY HAVE AN IMAGE BUILT FOR "S1" MICRO ERVICE


TIME 09.10
YOU HAVEE IMAGE 1 FOR "S1"
YOU HAVE IMAGE 2 FOR "S2"

IF YOU NEED TO SCALE UP "S1" JUST DEPLOY IMAGE 1

IF IT IS A VM YOU WILL HAVE A VIRTUAL MACHINE IMAGE IF IT IS A CONATIANER YOU HAVE CONTAINER IMAGE LIKE DOCKER
IMAGES ARE PREBUILT


USING VIRTUAL MACHINE(LIKE VMWARE) WAS HOW WE USE TO SCALE UNTIL CONTAINERS(TIME 9.34)
CONTAINERS ARE MOSTLY USED IN MICRO SERVCIE DEPLOYMENT
CONTAINER ORCAHSTRRATION-K8 OR DOCKER SWARM
YOU GIVE THE IAGE TO SCALE UP OR DOWN BASED ON MANY FACTORS LIKE REQUESTS COMING IN
,CPU,ETC.....



ADVANTAGES
1)ISOLATION AND SECURE
2)MANAGEABLE
3)FAST
4)AUTO SCALING



1)ISOLATION AND SECURE
WE ARE DEPLOYING ONE SERVICE IN ONE CONTAINER O ONE SERVICE CANT INTRUPT OTHER CONTAINERS EVEN IF THEY RUN ON SAME MACHINE OR HYPERVISOR
SO MICROSERVICE ARE ISOLATED AND HIGH SECURE

2)MANAGEBLE


MANAGEBLE AND EASY TO DEPLOY WE HAV TECHNOLOGIES LIKE K8,DOCKER SWARM TO MANAGE
INSTANCES OF DEPLOYMENTS



3)FAST
SPECIFICALLY FOR CONTAINERS(THEY ARE SO LIGHT WEIGTED) FOR VM NOT MUCH


3)AUTO CALING

AUTO SCALING IS MUCH EASIER COMPARED TO PREVIOUS PATTERN WHICH IS MULTIPLE SERVERS PER HOST

DISAVANTAGES
1)SLOW (ONLY FOR VIRTUAL MACHINES)
THE IMAGE SIZE FOR VIRTUAL MACHINE IS HIGHER BECAUSE IT HAS WHOLE OS IN IT
IT TKES TIME TO COPY
VMS ARE SLOWER IN BOOTING UP IT TAKES TIME TO STARTING UP THE WHOLE OS
THAT WAY IF YOU ARE USING VM FOR SERVICE PER VM /CONTAINER IT WILL BE SLOW
BUT IN CASE OF CONTIANER IT IS FAST


2)NOT EFFICIENT IN UTILIZING THE RESOURCE
BECUAE VM HAS TO RUN WHOLE OS
BUT WHERE AS CONTINERS IT IS NOT RUNNING AN OS ZO IT IS VERY LIGHT WEIGHT IT WILL NOT GOING TO CONSUM LOT OF RESOURCE TO RUN A CONTAINER



30NOT SECURE 
VM IS MORE SECURE 
CONTAINER IS RELATIVELLY LESS SECURE(QUETION WHY IS THIS??)




NOW A DAY MOT USED IS SERVICE ;PER CONTAINER(NOT VM,THOUGH IT WAS THE EARLYER PRACTICE)



3)SERVLESS PATTERN

NO SERVERS INVOLVED IN OUTR DEPLOYMENT
YOUR CODE DEFINITLY RUNS ON ONE OF THE ERVERS!!!
BUT YOU DONT HAVE TO WORRY ABOUT  SCALLING UP OR SCALLINGDOWN THE SERVER OR INSTNCES OF YOUR MICRO SERVICES OR MAINITNG CONFIGURING SERVICE REGISTRY,API GATEWAY AND ALL THAT
JUST WRITE THE CODE TO BASICALLY ACCEPTS AREQUEST AND RETURN A RESPONSE

HOW DOES IT HAPPEN?
IN CASE OF AWS YOU BASICALLY LOGIN TO AWS LAMBDA AND (GGOGLE CLOUD-GOLE CLOUD FUNCTION) AZURE (AZURE FUNCTION)) EVERY CLOUD PROVIDER SUPPORTS ERVELESS WITH 

WHEN YOU JUST LOGIN TO AWS LAMBDA YOU ARE GIVEN A CONSOLE TO PASTE IN CODE TAHT WHAT YOU NEED TO DO
AND MAKE SOME CONFIGURATIONLIKE API CONFIGURATIONLIKE
AFTER THAT YOU HAVE YOUR SERVICE RUNNING ON CLOUD PROVIDER YOU USE
WHT YOU DO IS YOU JUST STORE THE CODE IN CLOUD PROVIDER AND THEY KNOW WHEN TO TRIGGER IT USUALLY BY HTTP REQUES.tHEN CLOUD  RUN THE CODE AND RETURN THE RESIULT
NOT JUST ONLY HTTP REQUEST BUT BY EVENT HAPPENING ON AWS PLATFORM CAN ALOS TRIGGER THIS CODE.
EXAMPLE IN AWS THERE IS A PARTICULAR S3 BUCKET YOU NEED TO TRIGGER THIS PICE OF UNCTION AND TRIGGER 
EXAMPLE IF AN IMAGE GETS STORD IN S3 YOU NEDD TO RUN IT THE CODE WILL DO DOMETHING IN THAT IMAGE AND EXIT

WHILE YOU MAE HTTP CALLS YOU ACTUALLY NEED AN APIGATEWAY IN THIS CAE API GATEWAY IS ALSO PROVIDED BY SAME PROVIDER9(TIME 18.23 IMAGE)S


HOW DO THEY SCALE IT?
YOU DONT HAVE TO WORRY ABOUT IT CLOUD INFASTRUCTURE WILL DO IT
EVEN 1 REQUEST PER DAY OR 10000 REQUEST PER DAY IT WILL WORK
CLOUD WOULD NOT GIVE YOU ANY CONTROLL OF SCALING IT

YOU WILL NEVER KNOW WHETHER THEY ARE UING VM,CONTAINER OR EC 2 YOU WILL NEER KNOW
THEY DO IT BACKEND



ADVANTAGES AND DISADVANTAGES (TIME 21.16)
(HAVE TO TAKE NOTE JUST WATCHED)

ADAVNTAGE
FOCUS ON CODE
N WORRIES ABOUT SCALINGPAY AS YOU GOING



DISAVANTAGES

RUNTIME SUPPORTS(NEW LANGAUGES DOESNT HAVE RUNTIME SUPPOERT)
EXPENIVE(EC 2 MUCH CHEAP ,READ SOME BLOGS ABOUT THE PRICE)
VENDOR LOCK(IF YOU RUN ON AWS YOU CANT WRITE IN GOOGLE CLOUD)
DEBUGGING PAIN
STATELES AND SHORT RUNNING PROCES(YOU HAVE TO ADD DB,CACHE,ETC.. TO PRESEVEE SATE)



(HAVE TO TAKE NOTE JUST WATCHED)




















































 




























































































